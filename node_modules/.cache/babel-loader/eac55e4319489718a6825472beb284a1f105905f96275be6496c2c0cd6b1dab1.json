{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nexport const STATUSES = Object.freeze({\n  IDLE: \"idle\",\n  ERROR: \"error\",\n  LOADING: \"loading\"\n});\nconst productSlice = createSlice({\n  name: 'product',\n  initialState: {\n    data: [],\n    status: STATUSES.IDLE\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchProducts.pending, (state, action) => {\n      state.status = STATUSES.LOADING;\n    }).addCase(fetchProducts.fulfilled, (state, action) => {\n      state.data = action.payload;\n      state.status = STATUSES.IDLE;\n    }).addCase(fetchProducts.rejected, (state, action) => {\n      state.status = STATUSES.ERROR;\n    });\n  }\n});\nexport const fetchProducts = id => createAsyncThunk('products/fetch', async () => {\n  const res = await fetch(id ? \"https://fakestoreapi.com/products+id\" : \"https://fakestoreapi.com/products\");\n  const data = res.json();\n  return data;\n});\nexport default productSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","STATUSES","Object","freeze","IDLE","ERROR","LOADING","productSlice","name","initialState","data","status","extraReducers","builder","addCase","fetchProducts","pending","state","action","fulfilled","payload","rejected","id","res","fetch","json","reducer"],"sources":["E:/React/Ev tapşırıqları/Hazırlanan ev tapşırıqları/9 10/ecommerce/src/stores/productSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const STATUSES = Object.freeze({\r\n    IDLE: \"idle\",\r\n    ERROR: \"error\",\r\n    LOADING: \"loading\"\r\n})\r\n\r\nconst productSlice = createSlice({\r\n    name: 'product',\r\n    initialState: {\r\n        data: [],\r\n        status: STATUSES.IDLE \r\n    },\r\n    extraReducers: (builder) => {\r\n        builder.addCase(fetchProducts.pending, (state, action) => {\r\n            state.status = STATUSES.LOADING\r\n        })\r\n        .addCase(fetchProducts.fulfilled, (state, action) => {\r\n            state.data = action.payload\r\n            state.status = STATUSES.IDLE\r\n        })\r\n        .addCase(fetchProducts.rejected, (state, action) => {\r\n            state.status = STATUSES.ERROR\r\n        });\r\n    }\r\n})\r\n\r\nexport const fetchProducts =(id)=> createAsyncThunk('products/fetch', async () => {\r\n    const res = await fetch( id? \"https://fakestoreapi.com/products+id\" : \"https://fakestoreapi.com/products\" );\r\n    const data = res.json();\r\n    return data;\r\n})\r\n\r\nexport default productSlice.reducer;"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAEhE,OAAO,MAAMC,QAAQ,GAAGC,MAAM,CAACC,MAAM,CAAC;EAClCC,IAAI,EAAE,MAAM;EACZC,KAAK,EAAE,OAAO;EACdC,OAAO,EAAE;AACb,CAAC,CAAC;AAEF,MAAMC,YAAY,GAAGP,WAAW,CAAC;EAC7BQ,IAAI,EAAE,SAAS;EACfC,YAAY,EAAE;IACVC,IAAI,EAAE,EAAE;IACRC,MAAM,EAAEV,QAAQ,CAACG;EACrB,CAAC;EACDQ,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CAACC,OAAO,CAACC,aAAa,CAACC,OAAO,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACtDD,KAAK,CAACN,MAAM,GAAGV,QAAQ,CAACK,OAAO;IACnC,CAAC,CAAC,CACDQ,OAAO,CAACC,aAAa,CAACI,SAAS,EAAE,CAACF,KAAK,EAAEC,MAAM,KAAK;MACjDD,KAAK,CAACP,IAAI,GAAGQ,MAAM,CAACE,OAAO;MAC3BH,KAAK,CAACN,MAAM,GAAGV,QAAQ,CAACG,IAAI;IAChC,CAAC,CAAC,CACDU,OAAO,CAACC,aAAa,CAACM,QAAQ,EAAE,CAACJ,KAAK,EAAEC,MAAM,KAAK;MAChDD,KAAK,CAACN,MAAM,GAAGV,QAAQ,CAACI,KAAK;IACjC,CAAC,CAAC;EACN;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMU,aAAa,GAAGO,EAAE,IAAIvB,gBAAgB,CAAC,gBAAgB,EAAE,YAAY;EAC9E,MAAMwB,GAAG,GAAG,MAAMC,KAAK,CAAEF,EAAE,GAAE,sCAAsC,GAAG,mCAAoC,CAAC;EAC3G,MAAMZ,IAAI,GAAGa,GAAG,CAACE,IAAI,CAAC,CAAC;EACvB,OAAOf,IAAI;AACf,CAAC,CAAC;AAEF,eAAeH,YAAY,CAACmB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}