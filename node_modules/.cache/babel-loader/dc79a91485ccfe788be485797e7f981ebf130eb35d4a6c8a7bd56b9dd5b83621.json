{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\Ev tap\\u015F\\u0131r\\u0131qlar\\u0131\\\\Haz\\u0131rlanan ev tap\\u015F\\u0131r\\u0131qlar\\u0131\\\\9 10\\\\ecommerce\\\\src\\\\components\\\\Category.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Select from 'react-select';\nimport { changeCategory } from '../stores/categorySlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = [{\n  value: 'electronics',\n  label: 'electronics'\n}, {\n  value: 'jewelery',\n  label: 'jewelery'\n}, {\n  value: \"men's clothing\",\n  label: \"men's clothing\"\n}, {\n  value: \"women's clothing\",\n  label: \"women's clothing\"\n}];\nconst Category = () => {\n  _s();\n  const dispatch = useDispatch();\n  const category = useSelector(state => state.category); // Get the 'category' state from the Redux store\n\n  const handleClick = selectedOption => {\n    dispatch(changeCategory(selectedOption.value));\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: /*#__PURE__*/_jsxDEV(Select, {\n      options: options,\n      value: category,\n      onChange: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(Category, \"VmlR2orJIcCoyc91x8ZS1gxnSCk=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Category;\nexport default Category;\nvar _c;\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","Select","changeCategory","jsxDEV","_jsxDEV","options","value","label","Category","_s","dispatch","category","state","handleClick","selectedOption","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/React/Ev tapşırıqları/Hazırlanan ev tapşırıqları/9 10/ecommerce/src/components/Category.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Select from 'react-select';\r\nimport { changeCategory } from '../stores/categorySlice';\r\n\r\nconst options = [\r\n  { value: 'electronics', label: 'electronics' },\r\n  { value: 'jewelery', label: 'jewelery' },\r\n  { value: \"men's clothing\", label: \"men's clothing\" },\r\n  { value: \"women's clothing\", label: \"women's clothing\" }\r\n];\r\n\r\nconst Category = () => {\r\n  const dispatch = useDispatch();\r\n  const category = useSelector((state) => state.category); // Get the 'category' state from the Redux store\r\n\r\n  const handleClick = (selectedOption) => {\r\n    dispatch(changeCategory(selectedOption.value));\r\n  };\r\n\r\n  return (\r\n    <form>\r\n      <Select options={options} value={category} onChange={handleClick} />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Category;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,MAAM,MAAM,cAAc;AACjC,SAASC,cAAc,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,OAAO,GAAG,CACd;EAAEC,KAAK,EAAE,aAAa;EAAEC,KAAK,EAAE;AAAc,CAAC,EAC9C;EAAED,KAAK,EAAE,UAAU;EAAEC,KAAK,EAAE;AAAW,CAAC,EACxC;EAAED,KAAK,EAAE,gBAAgB;EAAEC,KAAK,EAAE;AAAiB,CAAC,EACpD;EAAED,KAAK,EAAE,kBAAkB;EAAEC,KAAK,EAAE;AAAmB,CAAC,CACzD;AAED,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAMY,QAAQ,GAAGX,WAAW,CAAEY,KAAK,IAAKA,KAAK,CAACD,QAAQ,CAAC,CAAC,CAAC;;EAEzD,MAAME,WAAW,GAAIC,cAAc,IAAK;IACtCJ,QAAQ,CAACR,cAAc,CAACY,cAAc,CAACR,KAAK,CAAC,CAAC;EAChD,CAAC;EAED,oBACEF,OAAA;IAAAW,QAAA,eACEX,OAAA,CAACH,MAAM;MAACI,OAAO,EAAEA,OAAQ;MAACC,KAAK,EAAEK,QAAS;MAACK,QAAQ,EAAEH;IAAY;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChE,CAAC;AAEX,CAAC;AAACX,EAAA,CAbID,QAAQ;EAAA,QACKT,WAAW,EACXC,WAAW;AAAA;AAAAqB,EAAA,GAFxBb,QAAQ;AAed,eAAeA,QAAQ;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}